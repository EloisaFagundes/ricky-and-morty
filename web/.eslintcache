[{"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/index.tsx":"1","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/reportWebVitals.ts":"2","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/App.tsx":"3","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/client/apollo-client.ts":"4","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/error/apollo-error-link.ts":"5","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/cache/apollo-local-cache.ts":"6","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/httpLink/apollo-http-link.ts":"7","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/app/modules/home-page.tsx":"8","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/app/components/Charachters/index.tsx":"9","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/generated/graphql.tsx":"10"},{"size":642,"mtime":1611866625997,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611866625997,"results":"13","hashOfConfig":"12"},{"size":246,"mtime":1611873622216,"results":"14","hashOfConfig":"12"},{"size":472,"mtime":1611866625997,"results":"15","hashOfConfig":"12"},{"size":577,"mtime":1611866625997,"results":"16","hashOfConfig":"12"},{"size":129,"mtime":1611866625997,"results":"17","hashOfConfig":"12"},{"size":135,"mtime":1611866625997,"results":"18","hashOfConfig":"12"},{"size":181,"mtime":1611873556332,"results":"19","hashOfConfig":"12"},{"size":1138,"mtime":1611878307891,"results":"20","hashOfConfig":"12"},{"size":8416,"mtime":1611872575404,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1g89vm8",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/index.tsx",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { apolloClient } from './config/client/apollo-client';\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient as any}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["48","49","50","51","52"],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/reportWebVitals.ts",["53"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/App.tsx",["54"],"import React from 'react';\nimport './App.css';\nimport { HomePage } from './app/modules/home-page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Rick and morty app</h1>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/client/apollo-client.ts",[],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/error/apollo-error-link.ts",["55","56"],"import { onError } from 'apollo-link-error';\n\nexport const errorLink = onError(\n  ({ graphQLErrors, networkError, response, operation }) => {\n    if (graphQLErrors) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const error of graphQLErrors) {\n        console.error(\n          `[GraphQL error]: Message: ${error.message}, Location: ${error.locations}, Path: ${error.path}`,\n          operation,\n          response,\n        );\n      }\n    }\n    if (networkError) {\n      console.error(`[Network error]: ${networkError}`, operation, response);\n    }\n  },\n);\n","/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/cache/apollo-local-cache.ts",[],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/config/httpLink/apollo-http-link.ts",[],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/app/modules/home-page.tsx",[],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/app/components/Charachters/index.tsx",[],"/home/eloisa/Documentos/5-GITHUB/ricky-and-morty/web/src/generated/graphql.tsx",[],{"ruleId":"57","severity":1,"message":"58","line":10,"column":43,"nodeType":"59","messageId":"60","endLine":10,"endColumn":46,"suggestions":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":25,"nodeType":"74","messageId":"75","endLine":3,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":5,"column":1,"nodeType":"76","messageId":"75","endLine":5,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":8,"column":9,"nodeType":"79","messageId":"80","endLine":8,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":16,"column":7,"nodeType":"79","messageId":"80","endLine":16,"endColumn":20},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],"lines-around-directive",["83"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","no-console","Unexpected console statement.","MemberExpression","unexpected",{"messageId":"84","fix":"85","desc":"86"},{"messageId":"87","fix":"88","desc":"89"},"padding-line-between-statements","suggestUnknown",{"range":"90","text":"91"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"90","text":"92"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[333,336],"unknown","never"]